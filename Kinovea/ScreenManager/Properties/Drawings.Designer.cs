//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Diagnostics;
using System.Diagnostics.CodeAnalysis;
using System.Drawing;
using System.Globalization;
using System.Resources;
using System.Runtime.CompilerServices;

namespace Kinovea.ScreenManager.Properties
{
    /// <summary>
	///   A strongly-typed resource class, for looking up localized strings, etc.
	/// </summary>
	// This class was auto-generated by the StronglyTypedResourceBuilder
	// class via a tool like ResGen or Visual Studio.
	// To add or remove a member, edit your .ResX file then rerun ResGen
	// with the /str option, or rebuild your VS project.
	[GeneratedCode("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
	[DebuggerNonUserCode()]
	[CompilerGenerated()]
	internal class Drawings
	{
		
		private static ResourceManager resourceMan;
		
		private static CultureInfo resourceCulture;
		
		[SuppressMessage("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
		internal Drawings()
		{
		}
		
		/// <summary>
		///   Returns the cached ResourceManager instance used by this class.
		/// </summary>
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		internal static ResourceManager ResourceManager
		{
			get
			{
				if (ReferenceEquals(resourceMan, null))
				{
					ResourceManager temp = new ResourceManager("Kinovea.ScreenManager.Properties.Drawings", typeof(Drawings).Assembly);
					resourceMan = temp;
				}
				return resourceMan;
			}
		}
		
		/// <summary>
		///   Overrides the current thread's CurrentUICulture property for all
		///   resource lookups using this strongly typed resource class.
		/// </summary>
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		internal static CultureInfo Culture
		{
			get
			{
				return resourceCulture;
			}
			set
			{
				resourceCulture = value;
			}
		}
		
		internal static Bitmap angle
		{
			get
			{
				object obj = ResourceManager.GetObject("angle", resourceCulture);
				return ((Bitmap)(obj));
			}
		}
		
		internal static Bitmap angleinvert
		{
			get
			{
				object obj = ResourceManager.GetObject("angleinvert", resourceCulture);
				return ((Bitmap)(obj));
			}
		}
		
		internal static Bitmap arrows
		{
			get
			{
				object obj = ResourceManager.GetObject("arrows", resourceCulture);
				return ((Bitmap)(obj));
			}
		}
		
		internal static Bitmap chrono
		{
			get
			{
				object obj = ResourceManager.GetObject("chrono", resourceCulture);
				return ((Bitmap)(obj));
			}
		}
		
		internal static Bitmap chronostart
		{
			get
			{
				object obj = ResourceManager.GetObject("chronostart", resourceCulture);
				return ((Bitmap)(obj));
			}
		}
		
		internal static Bitmap chronostop
		{
			get
			{
				object obj = ResourceManager.GetObject("chronostop", resourceCulture);
				return ((Bitmap)(obj));
			}
		}
		
		internal static Bitmap circle
		{
			get
			{
				object obj = ResourceManager.GetObject("circle", resourceCulture);
				return ((Bitmap)(obj));
			}
		}
		
		internal static Bitmap configure
		{
			get
			{
				object obj = ResourceManager.GetObject("configure", resourceCulture);
				return ((Bitmap)(obj));
			}
		}
		
		internal static Bitmap crossmark
		{
			get
			{
				object obj = ResourceManager.GetObject("crossmark", resourceCulture);
				return ((Bitmap)(obj));
			}
		}
		
		internal static Bitmap delete
		{
			get
			{
				object obj = ResourceManager.GetObject("delete", resourceCulture);
				return ((Bitmap)(obj));
			}
		}
		
		internal static Bitmap editorcolor
		{
			get
			{
				object obj = ResourceManager.GetObject("editorcolor", resourceCulture);
				return ((Bitmap)(obj));
			}
		}
		
		internal static Bitmap editorpen
		{
			get
			{
				object obj = ResourceManager.GetObject("editorpen", resourceCulture);
				return ((Bitmap)(obj));
			}
		}
		
		internal static Bitmap editortext
		{
			get
			{
				object obj = ResourceManager.GetObject("editortext", resourceCulture);
				return ((Bitmap)(obj));
			}
		}
		
		internal static Bitmap grid
		{
			get
			{
				object obj = ResourceManager.GetObject("grid", resourceCulture);
				return ((Bitmap)(obj));
			}
		}
		
		internal static Bitmap handclose24b
		{
			get
			{
				object obj = ResourceManager.GetObject("handclose24b", resourceCulture);
				return ((Bitmap)(obj));
			}
		}
		
		internal static Bitmap handopen24c
		{
			get
			{
				object obj = ResourceManager.GetObject("handopen24c", resourceCulture);
				return ((Bitmap)(obj));
			}
		}
		
		internal static Bitmap handtool
		{
			get
			{
				object obj = ResourceManager.GetObject("handtool", resourceCulture);
				return ((Bitmap)(obj));
			}
		}
		
		internal static Bitmap hide
		{
			get
			{
				object obj = ResourceManager.GetObject("hide", resourceCulture);
				return ((Bitmap)(obj));
			}
		}
		
		internal static Bitmap label
		{
			get
			{
				object obj = ResourceManager.GetObject("label", resourceCulture);
				return ((Bitmap)(obj));
			}
		}
		
		internal static Bitmap line
		{
			get
			{
				object obj = ResourceManager.GetObject("line", resourceCulture);
				return ((Bitmap)(obj));
			}
		}
		
		internal static Bitmap linecalibrate
		{
			get
			{
				object obj = ResourceManager.GetObject("linecalibrate", resourceCulture);
				return ((Bitmap)(obj));
			}
		}
		
		internal static Bitmap linesize
		{
			get
			{
				object obj = ResourceManager.GetObject("linesize", resourceCulture);
				return ((Bitmap)(obj));
			}
		}
		
		internal static Bitmap magnifier
		{
			get
			{
				object obj = ResourceManager.GetObject("magnifier", resourceCulture);
				return ((Bitmap)(obj));
			}
		}
		
		internal static Bitmap magnifieractive
		{
			get
			{
				object obj = ResourceManager.GetObject("magnifieractive", resourceCulture);
				return ((Bitmap)(obj));
			}
		}
		
		internal static Bitmap measure
		{
			get
			{
				object obj = ResourceManager.GetObject("measure", resourceCulture);
				return ((Bitmap)(obj));
			}
		}
		
		internal static Bitmap pencil
		{
			get
			{
				object obj = ResourceManager.GetObject("pencil", resourceCulture);
				return ((Bitmap)(obj));
			}
		}
		
		internal static Bitmap persistence
		{
			get
			{
				object obj = ResourceManager.GetObject("persistence", resourceCulture);
				return ((Bitmap)(obj));
			}
		}
		
		internal static Bitmap plane
		{
			get
			{
				object obj = ResourceManager.GetObject("plane", resourceCulture);
				return ((Bitmap)(obj));
			}
		}
		
		internal static Bitmap track
		{
			get
			{
				object obj = ResourceManager.GetObject("track", resourceCulture);
				return ((Bitmap)(obj));
			}
		}
		
		internal static Bitmap trackingplay
		{
			get
			{
				object obj = ResourceManager.GetObject("trackingplay", resourceCulture);
				return ((Bitmap)(obj));
			}
		}
		
		internal static Bitmap trackshape
		{
			get
			{
				object obj = ResourceManager.GetObject("trackshape", resourceCulture);
				return ((Bitmap)(obj));
			}
		}
		
		internal static Bitmap trackstop
		{
			get
			{
				object obj = ResourceManager.GetObject("trackstop", resourceCulture);
				return ((Bitmap)(obj));
			}
		}
		
		internal static Bitmap tracktrim
		{
			get
			{
				object obj = ResourceManager.GetObject("tracktrim", resourceCulture);
				return ((Bitmap)(obj));
			}
		}
		
		internal static Bitmap trajconfall
		{
			get
			{
				object obj = ResourceManager.GetObject("trajconfall", resourceCulture);
				return ((Bitmap)(obj));
			}
		}
		
		internal static Bitmap trajconffocus
		{
			get
			{
				object obj = ResourceManager.GetObject("trajconffocus", resourceCulture);
				return ((Bitmap)(obj));
			}
		}
		
		internal static Bitmap trajconflabel
		{
			get
			{
				object obj = ResourceManager.GetObject("trajconflabel", resourceCulture);
				return ((Bitmap)(obj));
			}
		}
	}
}
